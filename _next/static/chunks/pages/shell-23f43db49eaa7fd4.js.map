{"version":3,"file":"static/chunks/pages/shell-23f43db49eaa7fd4.js","mappings":"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","sources":["webpack://_N_E/?be13","webpack://_N_E/./src/pages/shell.tsx","webpack://_N_E/../../common/temp/node_modules/.pnpm/@fluentui+react@8.68.0_12a6012245369fd5be825566be975ff0/node_modules/@fluentui/react/lib/components/src/components/SearchBox/SearchBox.base.tsx","webpack://_N_E/../../common/temp/node_modules/.pnpm/@fluentui+react@8.68.0_12a6012245369fd5be825566be975ff0/node_modules/@fluentui/react/lib/components/src/components/SearchBox/SearchBox.styles.tsx","webpack://_N_E/../../common/temp/node_modules/.pnpm/@fluentui+react@8.68.0_12a6012245369fd5be825566be975ff0/node_modules/@fluentui/react/lib/components/src/components/SearchBox/SearchBox.tsx"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/shell\",\n      function () {\n        return require(\"private-next-pages/shell.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/shell\"])\n      });\n    }\n  ","import { IconButton, SearchBox, Stack, StackItem } from '@fluentui/react';\nimport { action, autorun, makeAutoObservable } from \"mobx\";\nimport { observer } from \"mobx-react-lite\";\nimport { NextPage } from \"next\";\nimport Head from \"next/head\";\nimport { useCallback, useEffect } from 'react';\nimport 'xterm/css/xterm.css';\nimport { ResizeObserver } from '../components';\nimport { GlobalState } from \"../state\";\nimport { Icons, RouteStackProps } from '../utils';\n\nlet terminal: import('../components/terminal').AdbTerminal;\nif (typeof window !== 'undefined') {\n    const { AdbTerminal } = await import('../components/terminal');\n    terminal = new AdbTerminal();\n}\n\nconst state = makeAutoObservable({\n    visible: false,\n    setVisible(value: boolean) {\n        this.visible = value;\n    },\n\n    searchKeyword: '',\n    setSearchKeyword(value: string) {\n        this.searchKeyword = value;\n        terminal.searchAddon.findNext(value, { incremental: true });\n    },\n\n    searchPrevious() {\n        terminal.searchAddon.findPrevious(this.searchKeyword);\n    },\n    searchNext() {\n        terminal.searchAddon.findNext(this.searchKeyword);\n    }\n}, {\n    searchPrevious: action.bound,\n    searchNext: action.bound,\n});\n\nautorun(() => {\n    if (!terminal) {\n        return;\n    }\n\n    if (!GlobalState.device) {\n        terminal.socket = undefined;\n        return;\n    }\n\n    if (!terminal.socket && state.visible) {\n        GlobalState.device.subprocess.shell()\n            .then(action(shell => {\n                terminal.socket = shell;\n            }), (e) => {\n                GlobalState.showErrorDialog(e);\n            });\n    }\n});\n\nconst UpIconProps = { iconName: Icons.ChevronUp };\nconst DownIconProps = { iconName: Icons.ChevronDown };\n\nconst Shell: NextPage = (): JSX.Element | null => {\n    const handleSearchKeywordChange = useCallback((e, value?: string) => {\n        state.setSearchKeyword(value ?? '');\n    }, []);\n\n    const handleResize = useCallback(() => {\n        terminal.fit();\n    }, []);\n\n    const handleContainerRef = useCallback((container: HTMLDivElement | null) => {\n        if (container) {\n            terminal.setContainer(container);\n        }\n    }, []);\n\n    useEffect(() => {\n        state.setVisible(true);\n        return () => {\n            state.setVisible(false);\n        };\n    }, []);\n\n    return (\n        <Stack {...RouteStackProps}>\n            <Head>\n                <title>Interactive Shell - Android Web Toolbox</title>\n            </Head>\n\n            <StackItem>\n                <Stack horizontal>\n                    <StackItem grow>\n                        <SearchBox\n                            placeholder=\"Find\"\n                            value={state.searchKeyword}\n                            onChange={handleSearchKeywordChange}\n                            onSearch={state.searchNext}\n                        />\n                    </StackItem>\n                    <StackItem>\n                        <IconButton\n                            disabled={!state.searchKeyword}\n                            iconProps={UpIconProps}\n                            onClick={state.searchPrevious}\n                        />\n                    </StackItem>\n                    <StackItem>\n                        <IconButton\n                            disabled={!state.searchKeyword}\n                            iconProps={DownIconProps}\n                            onClick={state.searchNext}\n                        />\n                    </StackItem>\n                </Stack>\n            </StackItem>\n\n            <StackItem grow styles={{ root: { position: 'relative', minHeight: 0 } }}>\n                <ResizeObserver onResize={handleResize} />\n                <div ref={handleContainerRef} style={{ height: '100%' }} />\n            </StackItem>\n        </Stack>\n    );\n};\n\nexport default observer(Shell);\n","import * as React from 'react';\nimport { KeyCodes, classNamesFunction, getNativeProps, inputProperties } from '../../Utilities';\nimport { useControllableValue, useId, useMergedRefs, useWarnings } from '@fluentui/react-hooks';\nimport { IconButton } from '../../Button';\nimport { Icon } from '../../Icon';\nimport type { ISearchBoxProps, ISearchBoxStyleProps, ISearchBoxStyles, ISearchBox } from './SearchBox.types';\nimport type { IButtonProps, IButtonStyles } from '../../Button';\nimport type { IIconProps } from '../../Icon';\n\nconst COMPONENT_NAME = 'SearchBox';\nconst iconButtonStyles: Partial<IButtonStyles> = { root: { height: 'auto' }, icon: { fontSize: '12px' } };\nconst iconButtonProps: IIconProps = { iconName: 'Clear' };\nconst defaultClearButtonProps: IButtonProps = { ariaLabel: 'Clear text' };\n\nconst getClassNames = classNamesFunction<ISearchBoxStyleProps, ISearchBoxStyles>();\n\nconst useComponentRef = (\n  componentRef: React.Ref<ISearchBox> | undefined,\n  inputElementRef: React.RefObject<HTMLInputElement>,\n  hasFocus: boolean,\n) => {\n  React.useImperativeHandle(\n    componentRef,\n    () => ({\n      focus: () => inputElementRef.current?.focus(),\n      hasFocus: () => hasFocus,\n    }),\n    [inputElementRef, hasFocus],\n  );\n};\n\nexport const SearchBoxBase: React.FunctionComponent<ISearchBoxProps> = React.forwardRef<\n  HTMLDivElement,\n  ISearchBoxProps\n>((props, forwardedRef) => {\n  const {\n    ariaLabel,\n    className,\n    defaultValue = '',\n    disabled,\n    underlined,\n    styles,\n    // eslint-disable-next-line deprecation/deprecation\n    labelText,\n    // eslint-disable-next-line deprecation/deprecation\n    placeholder = labelText,\n    theme,\n    clearButtonProps = defaultClearButtonProps,\n    disableAnimation = false,\n    showIcon = false,\n    onClear: customOnClear,\n    onBlur: customOnBlur,\n    onEscape: customOnEscape,\n    onSearch: customOnSearch,\n    onKeyDown: customOnKeyDown,\n    iconProps,\n    role,\n    onChange,\n    // eslint-disable-next-line deprecation/deprecation\n    onChanged,\n  } = props;\n\n  const [hasFocus, setHasFocus] = React.useState(false);\n\n  const prevChangeTimestamp = React.useRef<number | undefined>();\n  const [uncastValue, setValue] = useControllableValue(\n    props.value,\n    defaultValue,\n    (ev: React.ChangeEvent<HTMLInputElement> | undefined, newValue: string) => {\n      if (ev && ev.timeStamp === prevChangeTimestamp.current) {\n        // For historical reasons, SearchBox handles both onInput and onChange (we can't modify this\n        // outside a major version due to potential to break partners' tests and possibly apps).\n        // Only call props.onChange for one of the events.\n        return;\n      }\n      prevChangeTimestamp.current = ev?.timeStamp;\n      onChange?.(ev, newValue);\n      onChanged?.(newValue);\n    },\n  );\n  const value = String(uncastValue);\n\n  const rootElementRef = React.useRef<HTMLDivElement>(null);\n  const inputElementRef = React.useRef<HTMLInputElement>(null);\n  const mergedRootRef = useMergedRefs(rootElementRef, forwardedRef);\n  const id = useId(COMPONENT_NAME, props.id);\n\n  const { onClick: customOnClearClick } = clearButtonProps;\n\n  const classNames = getClassNames(styles!, {\n    theme: theme!,\n    className,\n    underlined,\n    hasFocus,\n    disabled,\n    hasInput: value.length > 0,\n    disableAnimation,\n    showIcon,\n  });\n\n  const nativeProps = getNativeProps<React.InputHTMLAttributes<HTMLInputElement>>(props, inputProperties, [\n    'className',\n    'placeholder',\n    'onFocus',\n    'onBlur',\n    'value',\n    'role',\n  ]);\n\n  const onClear = React.useCallback(\n    (ev: React.MouseEvent<HTMLAnchorElement | HTMLButtonElement> | React.KeyboardEvent<HTMLElement>) => {\n      customOnClear?.(ev);\n      if (!ev.defaultPrevented) {\n        setValue('');\n        inputElementRef.current?.focus();\n        ev.stopPropagation();\n        ev.preventDefault();\n      }\n    },\n    [customOnClear, setValue],\n  );\n\n  const onClearClick = React.useCallback(\n    (ev: React.MouseEvent<HTMLAnchorElement | HTMLButtonElement>) => {\n      customOnClearClick?.(ev);\n      if (!ev.defaultPrevented) {\n        onClear(ev);\n      }\n    },\n    [customOnClearClick, onClear],\n  );\n\n  const onFocusCapture = (ev: React.FocusEvent<HTMLElement>) => {\n    setHasFocus(true);\n    props.onFocus?.(ev as React.FocusEvent<HTMLInputElement>);\n  };\n\n  const onClickFocus = () => {\n    if (inputElementRef.current) {\n      inputElementRef.current.focus();\n      inputElementRef.current.selectionStart = inputElementRef.current.selectionEnd = 0;\n    }\n  };\n\n  const onBlur = React.useCallback(\n    (ev: React.FocusEvent<HTMLInputElement>): void => {\n      setHasFocus(false);\n      customOnBlur?.(ev);\n    },\n    [customOnBlur],\n  );\n\n  const onInputChange = (ev: React.ChangeEvent<HTMLInputElement>) => {\n    setValue(ev.target.value, ev);\n  };\n\n  const onKeyDown = (ev: React.KeyboardEvent<HTMLInputElement>) => {\n    // eslint-disable-next-line deprecation/deprecation\n    switch (ev.which) {\n      case KeyCodes.escape:\n        customOnEscape?.(ev);\n        // Only call onClear if the search box has a value to clear. Otherwise, allow the Esc key\n        // to propagate from the empty search box to a parent element such as a dialog, etc.\n        if (value && !ev.defaultPrevented) {\n          onClear(ev);\n        }\n        break;\n\n      case KeyCodes.enter:\n        if (customOnSearch) {\n          customOnSearch(value);\n          ev.preventDefault();\n          ev.stopPropagation();\n        }\n        break;\n\n      default:\n        // REVIEW: Why aren't we calling customOnKeyDown for Escape or Enter?\n        customOnKeyDown?.(ev);\n        // REVIEW: Why are we calling stopPropagation if customOnKeyDown called preventDefault?\n        // customOnKeyDown should call stopPropagation if it needs it.\n        if (ev.defaultPrevented) {\n          ev.stopPropagation();\n        }\n        break;\n    }\n  };\n\n  useDebugWarning(props);\n  useComponentRef(props.componentRef, inputElementRef, hasFocus);\n\n  return (\n    <div role={role} ref={mergedRootRef} className={classNames.root} onFocusCapture={onFocusCapture}>\n      <div className={classNames.iconContainer} onClick={onClickFocus} aria-hidden>\n        <Icon iconName=\"Search\" {...iconProps} className={classNames.icon} />\n      </div>\n      <input\n        {...nativeProps}\n        id={id}\n        className={classNames.field}\n        placeholder={placeholder}\n        onChange={onInputChange}\n        onInput={onInputChange}\n        onBlur={onBlur}\n        onKeyDown={onKeyDown}\n        value={value}\n        disabled={disabled}\n        role=\"searchbox\"\n        aria-label={ariaLabel}\n        ref={inputElementRef}\n      />\n      {value!.length > 0 && (\n        <div className={classNames.clearButton}>\n          <IconButton\n            onBlur={onBlur}\n            styles={iconButtonStyles}\n            iconProps={iconButtonProps}\n            {...clearButtonProps}\n            onClick={onClearClick}\n          />\n        </div>\n      )}\n    </div>\n  );\n});\nSearchBoxBase.displayName = COMPONENT_NAME;\n\nfunction useDebugWarning(props: ISearchBoxProps) {\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks -- build-time conditional\n    useWarnings({\n      name: COMPONENT_NAME,\n      props,\n      deprecations: { labelText: 'placeholder' },\n    });\n  }\n}\n","import {\n  HighContrastSelector,\n  AnimationVariables,\n  normalize,\n  getPlaceholderStyles,\n  getGlobalClassNames,\n  getInputFocusStyle,\n} from '../../Styling';\nimport { getRTL } from '../../Utilities';\nimport type { IStyle } from '../../Styling';\nimport type { ISearchBoxStyleProps, ISearchBoxStyles } from './SearchBox.types';\n\nconst GlobalClassNames = {\n  root: 'ms-SearchBox',\n  iconContainer: 'ms-SearchBox-iconContainer',\n  icon: 'ms-SearchBox-icon',\n  clearButton: 'ms-SearchBox-clearButton',\n  field: 'ms-SearchBox-field',\n};\n\nexport function getStyles(props: ISearchBoxStyleProps): ISearchBoxStyles {\n  const { theme, underlined, disabled, hasFocus, className, hasInput, disableAnimation, showIcon } = props;\n  const { palette, fonts, semanticColors, effects } = theme;\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n\n  // placeholder style constants\n  const placeholderStyles: IStyle = {\n    color: semanticColors.inputPlaceholderText,\n    opacity: 1,\n  };\n\n  const inputIconAlt = palette.neutralSecondary;\n  const inputIconAltHovered = palette.neutralPrimary;\n  const inputBorderDisabled = palette.neutralLighter;\n  const inputBackgroundHovered = palette.neutralLighter;\n  const inputBackgroundDisabled = palette.neutralLighter;\n\n  return {\n    root: [\n      classNames.root,\n      fonts.medium,\n      normalize,\n      {\n        color: semanticColors.inputText,\n        backgroundColor: semanticColors.inputBackground,\n        display: 'flex',\n        flexDirection: 'row',\n        flexWrap: 'nowrap',\n        alignItems: 'stretch',\n        // The 1px top and bottom padding ensure the input field does not overlap the border\n        padding: '1px 0 1px 4px',\n        borderRadius: effects.roundedCorner2,\n        border: `1px solid ${semanticColors.inputBorder}`,\n        height: 32,\n        selectors: {\n          [HighContrastSelector]: {\n            borderColor: 'WindowText',\n          },\n          ':hover': {\n            borderColor: semanticColors.inputBorderHovered,\n            selectors: {\n              [HighContrastSelector]: {\n                borderColor: 'Highlight',\n              },\n            },\n          },\n          [`:hover .${classNames.iconContainer}`]: {\n            color: semanticColors.inputIconHovered,\n          },\n        },\n      },\n      !hasFocus &&\n        hasInput && {\n          selectors: {\n            [`:hover .${classNames.iconContainer}`]: {\n              width: 4,\n            },\n            [`:hover .${classNames.icon}`]: {\n              opacity: 0,\n              pointerEvents: 'none',\n            },\n          },\n        },\n      hasFocus && [\n        'is-active',\n        {\n          position: 'relative',\n        },\n        getInputFocusStyle(\n          semanticColors.inputFocusBorderAlt,\n          underlined ? 0 : effects.roundedCorner2,\n          underlined ? 'borderBottom' : 'border',\n        ),\n      ],\n      showIcon && [\n        {\n          selectors: {\n            [`:hover .${classNames.iconContainer}`]: {\n              width: 32,\n            },\n            [`:hover .${classNames.icon}`]: {\n              opacity: 1,\n            },\n          },\n        },\n      ],\n      disabled && [\n        'is-disabled',\n        {\n          borderColor: inputBorderDisabled,\n          backgroundColor: inputBackgroundDisabled,\n          pointerEvents: 'none',\n          cursor: 'default',\n          selectors: {\n            [HighContrastSelector]: {\n              borderColor: 'GrayText',\n            },\n          },\n        },\n      ],\n      underlined && [\n        'is-underlined',\n        {\n          borderWidth: '0 0 1px 0',\n          borderRadius: 0,\n          // Underlined SearchBox has a larger padding left to vertically align with the waffle in product\n          padding: '1px 0 1px 8px',\n        },\n      ],\n      underlined &&\n        disabled && {\n          backgroundColor: 'transparent',\n        },\n      hasInput && 'can-clear',\n      className,\n    ],\n    iconContainer: [\n      classNames.iconContainer,\n      {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        flexShrink: 0,\n        fontSize: 16,\n        width: 32,\n        textAlign: 'center',\n        color: semanticColors.inputIcon,\n        cursor: 'text',\n      },\n      hasFocus && {\n        width: 4,\n      },\n      disabled && {\n        color: semanticColors.inputIconDisabled,\n      },\n      !disableAnimation && {\n        transition: `width ${AnimationVariables.durationValue1}`,\n      },\n      showIcon &&\n        hasFocus && {\n          width: 32,\n        },\n    ],\n    icon: [\n      classNames.icon,\n      {\n        opacity: 1,\n      },\n      hasFocus && {\n        opacity: 0,\n        pointerEvents: 'none',\n      },\n      !disableAnimation && {\n        transition: `opacity ${AnimationVariables.durationValue1} 0s`,\n      },\n      showIcon &&\n        hasFocus && {\n          opacity: 1,\n        },\n    ],\n    clearButton: [\n      classNames.clearButton,\n      {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'stretch',\n        cursor: 'pointer',\n        flexBasis: '32px',\n        flexShrink: 0,\n        padding: 0,\n        margin: '-1px 0px',\n        selectors: {\n          '&:hover .ms-Button': {\n            backgroundColor: inputBackgroundHovered,\n          },\n          '&:hover .ms-Button-icon': {\n            color: inputIconAltHovered,\n          },\n          '.ms-Button': {\n            borderRadius: getRTL(theme) ? '1px 0 0 1px' : '0 1px 1px 0',\n          },\n          '.ms-Button-icon': {\n            color: inputIconAlt,\n          },\n        },\n      },\n    ],\n    field: [\n      classNames.field,\n      normalize,\n      getPlaceholderStyles(placeholderStyles),\n      {\n        backgroundColor: 'transparent',\n        border: 'none',\n        outline: 'none',\n        fontWeight: 'inherit',\n        fontFamily: 'inherit',\n        fontSize: 'inherit',\n        color: semanticColors.inputText,\n        flex: '1 1 0px',\n        // The default implicit value of 'auto' prevents the input from shrinking. Setting min-width to\n        // 0px allows the input element to shrink to fit the container.\n        minWidth: '0px',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        // This padding forces the text placement to round up.\n        paddingBottom: 0.5,\n        // This removes the IE specific clear button in the input since we implemented our own\n        selectors: {\n          '::-ms-clear': {\n            display: 'none',\n          },\n        },\n      },\n      disabled && {\n        color: semanticColors.disabledText,\n      },\n    ],\n  };\n}\n","import * as React from 'react';\nimport { styled } from '../../Utilities';\nimport { SearchBoxBase } from './SearchBox.base';\nimport { getStyles } from './SearchBox.styles';\nimport type { ISearchBoxProps, ISearchBoxStyleProps, ISearchBoxStyles } from './SearchBox.types';\n\nexport const SearchBox: React.FunctionComponent<ISearchBoxProps> = styled<\n  ISearchBoxProps,\n  ISearchBoxStyleProps,\n  ISearchBoxStyles\n>(SearchBoxBase, getStyles, undefined, { scope: 'SearchBox' });\n"],"names":["window","__NEXT_P","push","terminal","AdbTerminal","state","makeAutoObservable","visible","setVisible","value","this","searchKeyword","setSearchKeyword","searchAddon","findNext","incremental","searchPrevious","findPrevious","searchNext","action","autorun","GlobalState","socket","then","shell","e","undefined","UpIconProps","iconName","Icons","DownIconProps","observer","handleSearchKeywordChange","useCallback","handleResize","fit","handleContainerRef","container","setContainer","useEffect","Stack","RouteStackProps","Head","title","StackItem","horizontal","grow","SearchBox","placeholder","onChange","onSearch","IconButton","disabled","iconProps","onClick","styles","root","position","minHeight","ResizeObserver","onResize","div","ref","style","height","COMPONENT_NAME","iconButtonStyles","icon","fontSize","iconButtonProps","defaultClearButtonProps","ariaLabel","getClassNames","classNamesFunction","SearchBoxBase","props","forwardedRef","className","defaultValue","underlined","labelText","theme","clearButtonProps","disableAnimation","showIcon","customOnClear","customOnBlur","customOnEscape","customOnSearch","customOnKeyDown","role","onChanged","hasFocus","setHasFocus","prevChangeTimestamp","useControllableValue","ev","newValue","timeStamp","current","uncastValue","setValue","String","rootElementRef","inputElementRef","mergedRootRef","useMergedRefs","id","useId","customOnClearClick","classNames","hasInput","length","nativeProps","onClear","defaultPrevented","focus","stopPropagation","preventDefault","onClearClick","onBlur","onInputChange","target","componentRef","useComponentRef","onFocusCapture","onFocus","iconContainer","selectionStart","selectionEnd","Icon","field","onInput","onKeyDown","which","KeyCodes","clearButton","displayName","GlobalClassNames","styled","palette","fonts","semanticColors","effects","placeholderStyles","color","inputPlaceholderText","opacity","inputIconAlt","neutralSecondary","inputIconAltHovered","neutralPrimary","inputBorderDisabled","neutralLighter","inputBackgroundHovered","inputBackgroundDisabled","medium","inputText","backgroundColor","inputBackground","display","flexDirection","flexWrap","alignItems","padding","borderRadius","roundedCorner2","border","inputBorder","selectors","borderColor","inputBorderHovered","inputIconHovered","width","pointerEvents","inputFocusBorderAlt","cursor","borderWidth","justifyContent","flexShrink","textAlign","inputIcon","inputIconDisabled","transition","flexBasis","margin","outline","fontWeight","fontFamily","flex","minWidth","overflow","textOverflow","paddingBottom","disabledText","scope"],"sourceRoot":""}